-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity traffic_decoder is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    raw_packet_tdata_V : IN STD_LOGIC_VECTOR (511 downto 0);
    raw_packet_tvalid_V : IN STD_LOGIC_VECTOR (0 downto 0);
    raw_packet_tready_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    decoded_packet_tdata_V : OUT STD_LOGIC_VECTOR (511 downto 0);
    decoded_packet_tkeep_V : OUT STD_LOGIC_VECTOR (63 downto 0);
    decoded_packet_tlast_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    decoded_packet_tvalid_V : OUT STD_LOGIC_VECTOR (0 downto 0);
    decoded_packet_tready_V : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of traffic_decoder is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "traffic_decoder,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.399000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=519,HLS_SYN_LUT=1232,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1F9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111001";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv32_1FE : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv32_1FD : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv32_1FC : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv32_1FB : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv32_1FA : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111000";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal meta_V : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    signal meta_count_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal r_V_1_fu_890_p3 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ret_V_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_904_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_2_fu_267_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_471_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_577_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_635_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_669_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_691_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln17_fu_707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_61_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_60_fu_685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_59_fu_679_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_58_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_57_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_56_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_55_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_54_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_53_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_52_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_51_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_50_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_49_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_48_fu_593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_47_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_46_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_45_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_44_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_43_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_42_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_41_fu_541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_40_fu_535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_39_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_38_fu_523_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_37_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_36_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_35_fu_505_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_34_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_33_fu_493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_32_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_31_fu_481_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_30_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_29_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_28_fu_453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_27_fu_447_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_26_fu_441_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_25_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_24_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_23_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_22_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_21_fu_411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_20_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_19_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_18_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_17_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_16_fu_381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_15_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_14_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_13_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_12_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_11_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_10_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_9_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_8_fu_333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_7_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_6_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_5_fu_315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_4_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_3_fu_303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_2_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_1_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_277_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_884_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    meta_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                meta_V <= ap_const_lv512_lc_1;
            else
                if (((ret_V_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    meta_V <= r_V_1_fu_890_p3;
                end if; 
            end if;
        end if;
    end process;


    meta_count_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                meta_count_V <= ap_const_lv6_0;
            else
                if (((ret_V_fu_872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    meta_count_V <= add_ln700_fu_904_p2;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_fu_904_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(meta_count_V));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    decoded_packet_tdata_V <= raw_packet_tdata_V;
    decoded_packet_tkeep_V <= (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((icmp_ln17_fu_707_p2 & icmp_ln895_61_fu_701_p2) & icmp_ln895_60_fu_685_p2) & icmp_ln895_59_fu_679_p2) & icmp_ln895_58_fu_663_p2) & icmp_ln895_57_fu_657_p2) & icmp_ln895_56_fu_651_p2) & icmp_ln895_55_fu_645_p2) & icmp_ln895_54_fu_629_p2) & icmp_ln895_53_fu_623_p2) & icmp_ln895_52_fu_617_p2) & icmp_ln895_51_fu_611_p2) & icmp_ln895_50_fu_605_p2) & icmp_ln895_49_fu_599_p2) & icmp_ln895_48_fu_593_p2) & icmp_ln895_47_fu_587_p2) & icmp_ln895_46_fu_571_p2) & icmp_ln895_45_fu_565_p2) & icmp_ln895_44_fu_559_p2) & icmp_ln895_43_fu_553_p2) & icmp_ln895_42_fu_547_p2) & icmp_ln895_41_fu_541_p2) & icmp_ln895_40_fu_535_p2) & icmp_ln895_39_fu_529_p2) & icmp_ln895_38_fu_523_p2) & icmp_ln895_37_fu_517_p2) & icmp_ln895_36_fu_511_p2) & icmp_ln895_35_fu_505_p2) & icmp_ln895_34_fu_499_p2) & icmp_ln895_33_fu_493_p2) & icmp_ln895_32_fu_487_p2) & icmp_ln895_31_fu_481_p2) & icmp_ln895_30_fu_465_p2) & icmp_ln895_29_fu_459_p2) & icmp_ln895_28_fu_453_p2) & icmp_ln895_27_fu_447_p2) & icmp_ln895_26_fu_441_p2) & icmp_ln895_25_fu_435_p2) & icmp_ln895_24_fu_429_p2) & icmp_ln895_23_fu_423_p2) & icmp_ln895_22_fu_417_p2) & icmp_ln895_21_fu_411_p2) & icmp_ln895_20_fu_405_p2) & icmp_ln895_19_fu_399_p2) & icmp_ln895_18_fu_393_p2) & icmp_ln895_17_fu_387_p2) & icmp_ln895_16_fu_381_p2) & icmp_ln895_15_fu_375_p2) & icmp_ln895_14_fu_369_p2) & icmp_ln895_13_fu_363_p2) & icmp_ln895_12_fu_357_p2) & icmp_ln895_11_fu_351_p2) & icmp_ln895_10_fu_345_p2) & icmp_ln895_9_fu_339_p2) & icmp_ln895_8_fu_333_p2) & icmp_ln895_7_fu_327_p2) & icmp_ln895_6_fu_321_p2) & icmp_ln895_5_fu_315_p2) & icmp_ln895_4_fu_309_p2) & icmp_ln895_3_fu_303_p2) & icmp_ln895_2_fu_297_p2) & icmp_ln895_1_fu_291_p2) & icmp_ln895_fu_285_p2) & tmp_1_fu_277_p3);
    decoded_packet_tlast_V <= meta_V(504 downto 504);
    decoded_packet_tvalid_V <= (raw_packet_tvalid_V and icmp_ln883_fu_859_p2);
    icmp_ln17_fu_707_p2 <= "0" when (p_Result_2_fu_267_p4 = ap_const_lv7_0) else "1";
    icmp_ln879_fu_878_p2 <= "1" when (meta_count_V = ap_const_lv6_0) else "0";
    icmp_ln883_fu_859_p2 <= "0" when (meta_count_V = ap_const_lv6_0) else "1";
    icmp_ln895_10_fu_345_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_34)) else "0";
    icmp_ln895_11_fu_351_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_33)) else "0";
    icmp_ln895_12_fu_357_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_32)) else "0";
    icmp_ln895_13_fu_363_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_31)) else "0";
    icmp_ln895_14_fu_369_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_30)) else "0";
    icmp_ln895_15_fu_375_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2F)) else "0";
    icmp_ln895_16_fu_381_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2E)) else "0";
    icmp_ln895_17_fu_387_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2D)) else "0";
    icmp_ln895_18_fu_393_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2C)) else "0";
    icmp_ln895_19_fu_399_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2B)) else "0";
    icmp_ln895_1_fu_291_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_3D)) else "0";
    icmp_ln895_20_fu_405_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2A)) else "0";
    icmp_ln895_21_fu_411_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_29)) else "0";
    icmp_ln895_22_fu_417_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_28)) else "0";
    icmp_ln895_23_fu_423_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_27)) else "0";
    icmp_ln895_24_fu_429_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_26)) else "0";
    icmp_ln895_25_fu_435_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_25)) else "0";
    icmp_ln895_26_fu_441_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_24)) else "0";
    icmp_ln895_27_fu_447_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_23)) else "0";
    icmp_ln895_28_fu_453_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_22)) else "0";
    icmp_ln895_29_fu_459_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_21)) else "0";
    icmp_ln895_2_fu_297_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_3C)) else "0";
    icmp_ln895_30_fu_465_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_20)) else "0";
    icmp_ln895_31_fu_481_p2 <= "0" when (tmp_2_fu_471_p4 = ap_const_lv2_0) else "1";
    icmp_ln895_32_fu_487_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_1E)) else "0";
    icmp_ln895_33_fu_493_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_1D)) else "0";
    icmp_ln895_34_fu_499_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_1C)) else "0";
    icmp_ln895_35_fu_505_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_1B)) else "0";
    icmp_ln895_36_fu_511_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_1A)) else "0";
    icmp_ln895_37_fu_517_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_19)) else "0";
    icmp_ln895_38_fu_523_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_18)) else "0";
    icmp_ln895_39_fu_529_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_17)) else "0";
    icmp_ln895_3_fu_303_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_3B)) else "0";
    icmp_ln895_40_fu_535_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_16)) else "0";
    icmp_ln895_41_fu_541_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_15)) else "0";
    icmp_ln895_42_fu_547_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_14)) else "0";
    icmp_ln895_43_fu_553_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_13)) else "0";
    icmp_ln895_44_fu_559_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_12)) else "0";
    icmp_ln895_45_fu_565_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_11)) else "0";
    icmp_ln895_46_fu_571_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_10)) else "0";
    icmp_ln895_47_fu_587_p2 <= "0" when (tmp_3_fu_577_p4 = ap_const_lv3_0) else "1";
    icmp_ln895_48_fu_593_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_E)) else "0";
    icmp_ln895_49_fu_599_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_D)) else "0";
    icmp_ln895_4_fu_309_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_3A)) else "0";
    icmp_ln895_50_fu_605_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_C)) else "0";
    icmp_ln895_51_fu_611_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_B)) else "0";
    icmp_ln895_52_fu_617_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_A)) else "0";
    icmp_ln895_53_fu_623_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_9)) else "0";
    icmp_ln895_54_fu_629_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_8)) else "0";
    icmp_ln895_55_fu_645_p2 <= "0" when (tmp_4_fu_635_p4 = ap_const_lv4_0) else "1";
    icmp_ln895_56_fu_651_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_6)) else "0";
    icmp_ln895_57_fu_657_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_5)) else "0";
    icmp_ln895_58_fu_663_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_4)) else "0";
    icmp_ln895_59_fu_679_p2 <= "0" when (tmp_5_fu_669_p4 = ap_const_lv5_0) else "1";
    icmp_ln895_5_fu_315_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_39)) else "0";
    icmp_ln895_60_fu_685_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_2)) else "0";
    icmp_ln895_61_fu_701_p2 <= "0" when (tmp_6_fu_691_p4 = ap_const_lv6_0) else "1";
    icmp_ln895_6_fu_321_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_38)) else "0";
    icmp_ln895_7_fu_327_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_37)) else "0";
    icmp_ln895_8_fu_333_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_36)) else "0";
    icmp_ln895_9_fu_339_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_35)) else "0";
    icmp_ln895_fu_285_p2 <= "1" when (unsigned(p_Result_2_fu_267_p4) > unsigned(ap_const_lv7_3E)) else "0";
    p_Result_2_fu_267_p4 <= meta_V(511 downto 505);
    r_V_1_fu_890_p3 <= 
        raw_packet_tdata_V when (icmp_ln879_fu_878_p2(0) = '1') else 
        r_V_fu_884_p2;
    r_V_fu_884_p2 <= std_logic_vector(shift_left(unsigned(meta_V),to_integer(unsigned('0' & ap_const_lv512_lc_2(31-1 downto 0)))));
    raw_packet_tready_V <= decoded_packet_tready_V;
    ret_V_fu_872_p2 <= (raw_packet_tvalid_V and decoded_packet_tready_V);
    tmp_1_fu_277_p3 <= meta_V(511 downto 511);
    tmp_2_fu_471_p4 <= meta_V(511 downto 510);
    tmp_3_fu_577_p4 <= meta_V(511 downto 509);
    tmp_4_fu_635_p4 <= meta_V(511 downto 508);
    tmp_5_fu_669_p4 <= meta_V(511 downto 507);
    tmp_6_fu_691_p4 <= meta_V(511 downto 506);
end behav;
