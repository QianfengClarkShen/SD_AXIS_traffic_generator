

================================================================
== Vivado HLS Report for 'datamover_controller'
================================================================
* Date:           Mon Oct  7 23:50:01 2019

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        datamover_controller
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu19eg-ffvc1760-2-i


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|     2.118|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.11>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %start_V), !map !90"   --->   Operation 2 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i64 %length_V), !map !96"   --->   Operation 3 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i104* %m_axis_tdata_V), !map !100"   --->   Operation 4 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %m_axis_tvalid_V), !map !104"   --->   Operation 5 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %m_axis_tready_V), !map !108"   --->   Operation 6 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([21 x i8]* @datamover_controller_1) nounwind"   --->   Operation 7 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%m_axis_tready_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %m_axis_tready_V)" [src/datamover_controller.cpp:9]   --->   Operation 8 'read' 'm_axis_tready_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%length_V_read = call i64 @_ssdm_op_Read.ap_none.i64(i64 %length_V)" [src/datamover_controller.cpp:9]   --->   Operation 9 'read' 'length_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%start_V_read = call i1 @_ssdm_op_Read.ap_none.i1(i1 %start_V)" [src/datamover_controller.cpp:9]   --->   Operation 10 'read' 'start_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/datamover_controller.cpp:13]   --->   Operation 11 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %start_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/datamover_controller.cpp:14]   --->   Operation 12 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64 %length_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/datamover_controller.cpp:15]   --->   Operation 13 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i104* %m_axis_tdata_V, i1* %m_axis_tvalid_V, [8 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [src/datamover_controller.cpp:16]   --->   Operation 14 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%m_axis_reg_tdata_V_l = load i104* @m_axis_reg_tdata_V, align 8" [include/datamover_controller.h:2->src/datamover_controller.cpp:23]   --->   Operation 15 'load' 'm_axis_reg_tdata_V_l' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i104P(i104* %m_axis_tdata_V, i104 %m_axis_reg_tdata_V_l)" [include/datamover_controller.h:2->src/datamover_controller.cpp:23]   --->   Operation 16 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%m_axis_reg_tvalid_V_s = load i1* @m_axis_reg_tvalid_V, align 8" [include/datamover_controller.h:2->src/datamover_controller.cpp:23]   --->   Operation 17 'load' 'm_axis_reg_tvalid_V_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_none.i1P(i1* %m_axis_tvalid_V, i1 %m_axis_reg_tvalid_V_s)" [include/datamover_controller.h:2->src/datamover_controller.cpp:23]   --->   Operation 18 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%start_reg_V_load = load i1* @start_reg_V, align 1" [src/datamover_controller.cpp:24]   --->   Operation 19 'load' 'start_reg_V_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns) (grouped into LUT with out node ret_V)   --->   "%lhs_V = xor i1 %start_reg_V_load, true" [src/datamover_controller.cpp:24]   --->   Operation 20 'xor' 'lhs_V' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.28ns) (out node of the LUT)   --->   "%ret_V = and i1 %start_V_read, %lhs_V" [src/datamover_controller.cpp:24]   --->   Operation 21 'and' 'ret_V' <Predicate = true> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "br i1 %ret_V, label %0, label %1" [src/datamover_controller.cpp:24]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%core_on_V_load = load i1* @core_on_V, align 1" [src/datamover_controller.cpp:28]   --->   Operation 23 'load' 'core_on_V_load' <Predicate = (!ret_V)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "br i1 %core_on_V_load, label %3, label %2" [src/datamover_controller.cpp:28]   --->   Operation 24 'br' <Predicate = (!ret_V)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.65ns)   --->   "store i104 0, i104* @m_axis_reg_tdata_V, align 8" [src/datamover_controller.cpp:29]   --->   Operation 25 'store' <Predicate = (!ret_V & !core_on_V_load)> <Delay = 0.65>
ST_1 : Operation 26 [1/1] (0.65ns)   --->   "store i1 false, i1* @m_axis_reg_tvalid_V, align 8" [src/datamover_controller.cpp:30]   --->   Operation 26 'store' <Predicate = (!ret_V & !core_on_V_load)> <Delay = 0.65>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "br label %7" [src/datamover_controller.cpp:31]   --->   Operation 27 'br' <Predicate = (!ret_V & !core_on_V_load)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %m_axis_tready_V_read, label %_ifconv, label %._crit_edge223" [src/datamover_controller.cpp:31]   --->   Operation 28 'br' <Predicate = (!ret_V & core_on_V_load)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_Val2_s = load i64* @length_reg_V, align 8" [src/datamover_controller.cpp:32]   --->   Operation 29 'load' 'p_Val2_s' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (1.13ns)   --->   "%icmp_ln895 = icmp ugt i64 %p_Val2_s, 4194304" [src/datamover_controller.cpp:32]   --->   Operation 30 'icmp' 'icmp_ln895' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln681 = trunc i64 %p_Val2_s to i23" [src/datamover_controller.cpp:32]   --->   Operation 31 'trunc' 'trunc_ln681' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & !icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.33ns)   --->   "%byte_to_transfer_V = select i1 %icmp_ln895, i23 -4194304, i23 %trunc_ln681" [src/datamover_controller.cpp:32]   --->   Operation 32 'select' 'byte_to_transfer_V' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.33> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%v2_V = load i64* @curr_addr_V, align 8" [src/datamover_controller.cpp:33]   --->   Operation 33 'load' 'v2_V' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%p_Result_s = call i104 @_ssdm_op_BitConcatenate.i104.i8.i64.i9.i23(i8 0, i64 %v2_V, i9 1, i23 %byte_to_transfer_V)" [src/datamover_controller.cpp:33]   --->   Operation 34 'bitconcatenate' 'p_Result_s' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.65ns)   --->   "store i104 %p_Result_s, i104* @m_axis_reg_tdata_V, align 8" [src/datamover_controller.cpp:33]   --->   Operation 35 'store' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.65>
ST_1 : Operation 36 [1/1] (0.65ns)   --->   "store i1 true, i1* @m_axis_reg_tvalid_V, align 8" [src/datamover_controller.cpp:34]   --->   Operation 36 'store' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.65>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %icmp_ln895, label %4, label %5" [src/datamover_controller.cpp:35]   --->   Operation 37 'br' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.65ns)   --->   "store i1 false, i1* @core_on_V, align 1" [src/datamover_controller.cpp:39]   --->   Operation 38 'store' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & !icmp_ln895)> <Delay = 0.65>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "br label %6"   --->   Operation 39 'br' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & !icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.08ns)   --->   "%add_ln701 = add i64 %p_Val2_s, -4194304" [src/datamover_controller.cpp:36]   --->   Operation 40 'add' 'add_ln701' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & icmp_ln895)> <Delay = 1.08> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.65ns)   --->   "store i64 %add_ln701, i64* @length_reg_V, align 8" [src/datamover_controller.cpp:36]   --->   Operation 41 'store' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & icmp_ln895)> <Delay = 0.65>
ST_1 : Operation 42 [1/1] (1.08ns)   --->   "%add_ln700 = add i64 %v2_V, 4194304" [src/datamover_controller.cpp:37]   --->   Operation 42 'add' 'add_ln700' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & icmp_ln895)> <Delay = 1.08> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.65ns)   --->   "store i64 %add_ln700, i64* @curr_addr_V, align 8" [src/datamover_controller.cpp:37]   --->   Operation 43 'store' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & icmp_ln895)> <Delay = 0.65>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "br label %6" [src/datamover_controller.cpp:38]   --->   Operation 44 'br' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read & icmp_ln895)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "br label %._crit_edge223" [src/datamover_controller.cpp:41]   --->   Operation 45 'br' <Predicate = (!ret_V & core_on_V_load & m_axis_tready_V_read)> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "br label %7"   --->   Operation 46 'br' <Predicate = (!ret_V & core_on_V_load)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "br label %8"   --->   Operation 47 'br' <Predicate = (!ret_V)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.65ns)   --->   "store i1 true, i1* @core_on_V, align 1" [src/datamover_controller.cpp:25]   --->   Operation 48 'store' <Predicate = (ret_V)> <Delay = 0.65>
ST_1 : Operation 49 [1/1] (0.65ns)   --->   "store i64 0, i64* @curr_addr_V, align 8" [src/datamover_controller.cpp:26]   --->   Operation 49 'store' <Predicate = (ret_V)> <Delay = 0.65>
ST_1 : Operation 50 [1/1] (0.65ns)   --->   "store i64 %length_V_read, i64* @length_reg_V, align 8" [src/datamover_controller.cpp:27]   --->   Operation 50 'store' <Predicate = (ret_V)> <Delay = 0.65>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "br label %8" [src/datamover_controller.cpp:28]   --->   Operation 51 'br' <Predicate = (ret_V)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "store i1 %start_V_read, i1* @start_reg_V, align 1" [src/datamover_controller.cpp:42]   --->   Operation 52 'store' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "ret void" [src/datamover_controller.cpp:43]   --->   Operation 53 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 2.12ns
The critical path consists of the following:
	'load' operation ('__Val2__', src/datamover_controller.cpp:32) on static variable 'length_reg_V' [43]  (0 ns)
	'icmp' operation ('icmp_ln895', src/datamover_controller.cpp:32) [44]  (1.13 ns)
	'select' operation ('byte_to_transfer.V', src/datamover_controller.cpp:32) [46]  (0.332 ns)
	'store' operation ('store_ln33', src/datamover_controller.cpp:33) of variable '__Result__', src/datamover_controller.cpp:33 on static variable 'm_axis_reg_tdata_V' [49]  (0.656 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
