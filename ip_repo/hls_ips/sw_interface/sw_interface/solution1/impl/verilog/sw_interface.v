// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sw_interface,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=462,HLS_SYN_LUT=748,HLS_VERSION=2019_1}" *)

module sw_interface (
        start_V,
        rst_V,
        transfer_length_V,
        mismatch_V,
        tx_timeElapse_V,
        rx_timeElapse_V,
        tx_timestamp_sum_V,
        rx_timestamp_sum_V,
        pkt_cnt_tx_V,
        pkt_cnt_rx_V,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output  [0:0] start_V;
output  [0:0] rst_V;
output  [63:0] transfer_length_V;
input  [0:0] mismatch_V;
input  [31:0] tx_timeElapse_V;
input  [31:0] rx_timeElapse_V;
input  [63:0] tx_timestamp_sum_V;
input  [63:0] rx_timestamp_sum_V;
input  [31:0] pkt_cnt_tx_V;
input  [31:0] pkt_cnt_rx_V;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;

wire   [0:0] axil_start_V;
wire   [0:0] axil_rst_V;
wire   [31:0] axil_len_low_V;
wire   [31:0] axil_len_high_V;
wire   [31:0] axil_mismatch_V;
wire    axil_mismatch_V_ap_vld;
wire    axil_tx_timeElapse_V_ap_vld;
wire    axil_rx_timeElapse_V_ap_vld;
wire   [31:0] axil_tx_timestamp_sum_low_V;
wire    axil_tx_timestamp_sum_low_V_ap_vld;
wire   [31:0] axil_tx_timestamp_sum_high_V;
wire    axil_tx_timestamp_sum_high_V_ap_vld;
wire   [31:0] axil_rx_timestamp_sum_low_V;
wire    axil_rx_timestamp_sum_low_V_ap_vld;
wire   [31:0] axil_rx_timestamp_sum_high_V;
wire    axil_rx_timestamp_sum_high_V_ap_vld;
wire    axil_pkt_cnt_tx_V_ap_vld;
wire    axil_pkt_cnt_rx_V_ap_vld;
 reg    ap_rst_n_inv;

sw_interface_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
sw_interface_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .axil_start_V(axil_start_V),
    .axil_rst_V(axil_rst_V),
    .axil_len_low_V(axil_len_low_V),
    .axil_len_high_V(axil_len_high_V),
    .axil_mismatch_V(axil_mismatch_V),
    .axil_mismatch_V_ap_vld(axil_mismatch_V_ap_vld),
    .axil_tx_timeElapse_V(tx_timeElapse_V),
    .axil_tx_timeElapse_V_ap_vld(axil_tx_timeElapse_V_ap_vld),
    .axil_rx_timeElapse_V(rx_timeElapse_V),
    .axil_rx_timeElapse_V_ap_vld(axil_rx_timeElapse_V_ap_vld),
    .axil_tx_timestamp_sum_low_V(axil_tx_timestamp_sum_low_V),
    .axil_tx_timestamp_sum_low_V_ap_vld(axil_tx_timestamp_sum_low_V_ap_vld),
    .axil_tx_timestamp_sum_high_V(axil_tx_timestamp_sum_high_V),
    .axil_tx_timestamp_sum_high_V_ap_vld(axil_tx_timestamp_sum_high_V_ap_vld),
    .axil_rx_timestamp_sum_low_V(axil_rx_timestamp_sum_low_V),
    .axil_rx_timestamp_sum_low_V_ap_vld(axil_rx_timestamp_sum_low_V_ap_vld),
    .axil_rx_timestamp_sum_high_V(axil_rx_timestamp_sum_high_V),
    .axil_rx_timestamp_sum_high_V_ap_vld(axil_rx_timestamp_sum_high_V_ap_vld),
    .axil_pkt_cnt_tx_V(pkt_cnt_tx_V),
    .axil_pkt_cnt_tx_V_ap_vld(axil_pkt_cnt_tx_V_ap_vld),
    .axil_pkt_cnt_rx_V(pkt_cnt_rx_V),
    .axil_pkt_cnt_rx_V_ap_vld(axil_pkt_cnt_rx_V_ap_vld)
);

assign axil_mismatch_V_ap_vld = 1'b1;

assign axil_pkt_cnt_rx_V_ap_vld = 1'b1;

assign axil_pkt_cnt_tx_V_ap_vld = 1'b1;

assign axil_rx_timeElapse_V_ap_vld = 1'b1;

assign axil_rx_timestamp_sum_high_V_ap_vld = 1'b1;

assign axil_rx_timestamp_sum_low_V_ap_vld = 1'b1;

assign axil_tx_timeElapse_V_ap_vld = 1'b1;

assign axil_tx_timestamp_sum_high_V_ap_vld = 1'b1;

assign axil_tx_timestamp_sum_low_V_ap_vld = 1'b1;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign axil_mismatch_V = mismatch_V;

assign axil_rx_timestamp_sum_high_V = {{rx_timestamp_sum_V[63:32]}};

assign axil_rx_timestamp_sum_low_V = rx_timestamp_sum_V[31:0];

assign axil_tx_timestamp_sum_high_V = {{tx_timestamp_sum_V[63:32]}};

assign axil_tx_timestamp_sum_low_V = tx_timestamp_sum_V[31:0];

assign rst_V = axil_rst_V;

assign start_V = axil_start_V;

assign transfer_length_V = {{axil_len_high_V}, {axil_len_low_V}};

endmodule //sw_interface
