// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sw_interface,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu19eg-ffvc1760-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=462,HLS_SYN_LUT=748,HLSERSION=2019_1}" *)

module sw_interface (
        start,
        rst,
        transfer_length,
        mismatch,
        tx_timeElapse,
        rx_timeElapse,
        tx_timestamp_sum,
        rx_timestamp_sum,
        pkt_cnt_tx,
        pkt_cnt_rx,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output  [0:0] start;
output  [0:0] rst;
output  [63:0] transfer_length;
input  [0:0] mismatch;
input  [31:0] tx_timeElapse;
input  [31:0] rx_timeElapse;
input  [63:0] tx_timestamp_sum;
input  [63:0] rx_timestamp_sum;
input  [31:0] pkt_cnt_tx;
input  [31:0] pkt_cnt_rx;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;

wire   [0:0] axil_start;
wire   [0:0] axil_rst;
wire   [31:0] axil_len_low;
wire   [31:0] axil_len_high;
wire   [31:0] axil_mismatch;
wire    axil_mismatch_ap_vld;
wire    axil_tx_timeElapse_ap_vld;
wire    axil_rx_timeElapse_ap_vld;
wire   [31:0] axil_tx_timestamp_sum_low;
wire    axil_tx_timestamp_sum_low_ap_vld;
wire   [31:0] axil_tx_timestamp_sum_high;
wire    axil_tx_timestamp_sum_high_ap_vld;
wire   [31:0] axil_rx_timestamp_sum_low;
wire    axil_rx_timestamp_sum_low_ap_vld;
wire   [31:0] axil_rx_timestamp_sum_high;
wire    axil_rx_timestamp_sum_high_ap_vld;
wire    axil_pkt_cnt_tx_ap_vld;
wire    axil_pkt_cnt_rx_ap_vld;
 reg    ap_rst_n_inv;

sw_interface_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
sw_interface_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .axil_start(axil_start),
    .axil_rst(axil_rst),
    .axil_len_low(axil_len_low),
    .axil_len_high(axil_len_high),
    .axil_mismatch(axil_mismatch),
    .axil_mismatch_ap_vld(axil_mismatch_ap_vld),
    .axil_tx_timeElapse(tx_timeElapse),
    .axil_tx_timeElapse_ap_vld(axil_tx_timeElapse_ap_vld),
    .axil_rx_timeElapse(rx_timeElapse),
    .axil_rx_timeElapse_ap_vld(axil_rx_timeElapse_ap_vld),
    .axil_tx_timestamp_sum_low(axil_tx_timestamp_sum_low),
    .axil_tx_timestamp_sum_low_ap_vld(axil_tx_timestamp_sum_low_ap_vld),
    .axil_tx_timestamp_sum_high(axil_tx_timestamp_sum_high),
    .axil_tx_timestamp_sum_high_ap_vld(axil_tx_timestamp_sum_high_ap_vld),
    .axil_rx_timestamp_sum_low(axil_rx_timestamp_sum_low),
    .axil_rx_timestamp_sum_low_ap_vld(axil_rx_timestamp_sum_low_ap_vld),
    .axil_rx_timestamp_sum_high(axil_rx_timestamp_sum_high),
    .axil_rx_timestamp_sum_high_ap_vld(axil_rx_timestamp_sum_high_ap_vld),
    .axil_pkt_cnt_tx(pkt_cnt_tx),
    .axil_pkt_cnt_tx_ap_vld(axil_pkt_cnt_tx_ap_vld),
    .axil_pkt_cnt_rx(pkt_cnt_rx),
    .axil_pkt_cnt_rx_ap_vld(axil_pkt_cnt_rx_ap_vld)
);

assign axil_mismatch_ap_vld = 1'b1;

assign axil_pkt_cnt_rx_ap_vld = 1'b1;

assign axil_pkt_cnt_tx_ap_vld = 1'b1;

assign axil_rx_timeElapse_ap_vld = 1'b1;

assign axil_rx_timestamp_sum_high_ap_vld = 1'b1;

assign axil_rx_timestamp_sum_low_ap_vld = 1'b1;

assign axil_tx_timeElapse_ap_vld = 1'b1;

assign axil_tx_timestamp_sum_high_ap_vld = 1'b1;

assign axil_tx_timestamp_sum_low_ap_vld = 1'b1;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign axil_mismatch = mismatch;

assign axil_rx_timestamp_sum_high = {{rx_timestamp_sum[63:32]}};

assign axil_rx_timestamp_sum_low = rx_timestamp_sum[31:0];

assign axil_tx_timestamp_sum_high = {{tx_timestamp_sum[63:32]}};

assign axil_tx_timestamp_sum_low = tx_timestamp_sum[31:0];

assign rst = axil_rst;

assign start = axil_start;

assign transfer_length = {{axil_len_high}, {axil_len_low}};

endmodule //sw_interface
